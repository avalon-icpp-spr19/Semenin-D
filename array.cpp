#include "Extention.hpp"
#include<iostream>
using namespace ext;
/* Задание 1
Объявите массив для хранения 10-ти целочисленных элементов
int mas[10];
Объявите константный массив для хранения 20-ти вещественных элементов
const float arr[20]{};
Объявите массив для хранения 2-х символьных элементов
char m[2];
Пусть есть массив объявленный следующим образом:
int data[6] = { 2, 4, 8, 16, 32, 64 };
Какой размер имеет данный массив?
6
Данные какого типа он хранит
integer
Чему равен элемент массива с индексом 0?
2
Чему равен элемент массива с индексом 3?
16
Какой индекс у элемента 8?
2
Какой индекс у элемента 32?
4
Присвойте первому элементу массива значение 1.
data[0]=1;
Утройте значение последнего элемента в массиве.
data[5]=data[5]*3;
Выведите элементы массива на экран через пробел.
for( int i=0;i<6,++i)
{
std::cout<<mas[i]<<" "<<std::endl;
}
Объявите массив для хранения 5-ти элеменов любого типа и проинизиализируете его с помощью списка инициализации
int mas[5]{1,2,3,4,5};
Выведите объявленный массив на экран.
for( int i=0;i<5,++i)
{
std::cout<<mas[i]<<std::endl;
}
Можно ли не указывать размер массива при его создании?
нет
Если можно, то продемострируйте это.
Пусть массив объявили следующим образом:
int data[5] = { 1, 2 }
Каков размер данного массива?
5
Чему равен элемент с индексов 1? Чему равен элемент с индексом 2?
2,0
Проверьте ответы с помощью дебагера.
Выведите все элементы массива на экран.
for( int i=0;i<5,++i)
{
std::cout<<data[i]<<std::endl;
}
Пусть массив объявлен следующим образом:
const char alpha[3] = { 'a', 'b', 'c' }
Каков размер данного массива?
3
Чему равен элемент с индексов 0? Чему равен индекс у элемента 'c'
'a'
2
Допустимы ли следующие выражения:
alpha[0]; да
alpha[3]; нет
alpha[1] = 'd'; да
alpha[1] = 'b';да
Выведите все элементы массива на экран.
for( int i=0;i<3,++i)
{
std::cout<<alpha[i]<<std::endl;
}
*/

/*
Задание 2
Объявите массив для хранения переменных типа int размером 20;
Запишите в объявленный массив первые 20 натуральных чисел в порядке возрастания
Выведите все элементы массива на экран
Запишите в этот же массив первые 20 четных чисел в порядке возрастания
Выведите все элементы массива на экран
Запишите в этот же массив первые 20 степеней двойки (2^0, 2^1, ... , 2^19). Функцию pow не использовать
Выведите все элементы массива на экран по 5 элементов в одной строке
Занулите в предыдущем массивы все элементы с нечетным индексов (i = 1, 3, ..., 19);
Выведите все элементы массива на экран по 5 элементов в одной строке
*/
/*int main()
{
	int mas[20];
	for (int i = 0; i < 20; ++i)
	{
		mas[i] = i + 1;
	}
	for (int i = 0; i < 20; ++i)
	{
	std::cout<<	mas[i]<<std::endl ;
	}
	for (int i = 0; i < 20; ++i)
	{
		mas[i] = 2+2*i;
	}
	for (int i = 0; i < 20; ++i)
	{
		std::cout << mas[i] << std::endl;
	}
	for (int i = 0; i < 20; ++i)
	{
		int num=1;
		for (int j = 0; j < i; ++j)
		{
			num = num*2;
		}
		mas[i]=num;
	}
	int ch=1;
	for (int i = 0; i < 20; ++i)
	{

		std::cout << mas[i] <<" ";
		if (ch % 5==0)
		{
			std::cout << std::endl;
		}
		ch += 1;
	}
	for (int i = 0; i < 20; ++i)
	{
		if (!((i+1) % 2 == 0))
		{
			mas[i] = 0;
		}
	}
	ch = 1;
	for (int i = 0; i < 20; ++i)
	{
		std::cout << mas[i] << " ";
		if (ch % 5 == 0)
		{
			std::cout << std::endl;
		}
		ch += 1;
	}
}*/
/* Задание 3
При выполнении дальнейших заданий для заполнения массива случайными числами использовать функцию ext::GetRandomValue из Extention.hpp
Например:
int data[10];
for(int i = 0; i < 10; ++i)
{
data[i] = ext::GetRandomValue(0, 100, true);
}
После выполнения данного кода массив data будет содержать 10 чисел в диапазоне от 0 до 100.
Сгенерируйте массив из 10 элементов в диапазоне от -10 до 10.
Выведите его на экран
Найдите наибольший элемент в массиве.
Выведите на экран значение этого элемента и его индекс
(если максимальных элементов несколько вывести индекс любого).
Сгенерируйте массив из 100 элементов в диапазоне от -100 до 100.
Посчитайте и выведите на экран
Сумму всех элементов этого массива.
Количество элементов меньше 0, количество элементов равных 0, количество элементов больше 0
Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
Вывести на экран
Элементы в записи которых встречается цифра 2
Элементы в записи которых не встречаются нечетные цифры
Сложите поэлементно массивы из двух предыдущих пунктов, записав результаты сложения в новый массив
Выведите на экран получившийся массив по 10 элементов в строке.
Сгенерируйте массив из 100 элементов в диапазоне от 1 до 100.
Попросите пользователя ввести число из этого же диапазона.
Осуществите поиск элемента в массиве.
Если число есть в массиве выведите его индекс, если числа нет выведите -1.
Посчитайте и выведите на экран количество элементов больших, чем введенное пользователем число.
*/
/*int main()
{
	int dat[10];
	for (int i = 0; i < 10; ++i)
	{
		dat[i] = ext::GetRandomValue(-10, 10);
	}
	for (int i = 0; i < 10; ++i)
	{
		std::cout << dat[i] << std::endl;
	}
	std::cout << std::endl;
	int max = -11;
	int num, nom;
	for (int i = 0; i < 10; ++i)
	{
		if (dat[i])
		{
			num = dat[i];
			nom =i;
		}
	}
	std::cout << num << std::endl;
	std::cout << nom << std::endl;
	int arr[100];
	for (int i = 0; i < 100; ++i)
	{
		arr[i] = ext::GetRandomValue(-100, 100);
	}
	int summ=0;
	for (int i = 0; i < 100; ++i)
	{
		summ+=arr[i];
	}
	std::cout << summ << std::endl;
	summ = 0;
	for (int i = 0; i < 100; ++i)
	{
		if (arr[i] < 0)
		{
			summ += arr[i];
		}
	}
	std::cout << summ << std::endl;
	summ = 0;
	for (int i = 0; i < 100; ++i)
	{
		if (arr[i] == 0)
		{
			summ += arr[i];
		}
	}
	std::cout << summ << std::endl;
	summ = 0;
	for (int i = 0; i < 100; ++i)
	{
		if (arr[i] > 0)
		{
			summ += arr[i];
		}
	}
	std::cout << summ << std::endl;
	int mas[100];
	for (int i = 0; i < 100; ++i)
	{
		mas[i] = ext::GetRandomValue(1, 100);
	}
	for (int i = 0; i < 100; ++i)
	{
		if ((mas[i] / 10==2)||(mas[i]%10==2))
		{
			std::cout << mas[i] << std::endl;
		}
	}
	for (int i = 0; i < 100; ++i)
	{
		if (((mas[i] / 10)%2!=0) || ((mas[i] % 10 ) % 2!=0) ||(mas[i]==100))
		{
			std::cout << mas[i] << std::endl;
		}
	}
	int megmas[100];
	for (int i = 0; i < 100; ++i)
	{
		megmas[i] = mas[i] + arr[i];
	}
	int ch = 1;
	for (int i = 0; i < 100; ++i)
	{
		std::cout << megmas[i] << " ";
		if (ch % 10 == 0)
		{
			std::cout << std::endl;
		}
		ch += 1;
	}
}*/
/*int main()
{
	int mas[100];
	for (int i = 0; i < 100; ++i)
	{
		mas[i] = ext::GetRandomValue(1, 100);
	}
	std::cout << "Put a number";
	int num;
	std::cin >> num;
	int res, sum;
	res = -1;
	sum = 0;
	for (int i = 0; i < 100; ++i)
	{
		if (mas[i] == num)
		{
			res = i;
		}
		if (mas[i] > num)
		{
			sum += mas[i];
		}
	}
	std::cout << res << std::endl;
	std::cout << sum << std::endl;
}*/
/* Задание 4
Сгенерируйте массив типа char из 100 элементов в диапазоне от a до z.
Подсказка: функцию генерации рандомного элемента можно вызвать следующим образом:
GetRandomValue('a','z');
Выведите получившейся массив на экран в виде одной строки.
Выведите на экран как часто каждая буква встречается в сгенерированном массиве.
Выведите на экран вертикальную гистограмму рассчитанной частоты символов.
Пример: "aabbdddz" для такой строки получится следующая гистограмма:
|**
|**
|
|***
|
|
...
|
|
|*
На основании произведенных расчетов замените числовое представление на гистограмму, составленную из символов '*'
*/
/*int main()
{
	char mass[100];
	for (int i = 0;i < 100;++i)
	{
		mass[i]= GetRandomValue('a', 'z');
	}
	int arr[26];
	for (int i = 0;i < 100;++i)
	{
		++arr[mass[i] - 'a'];
	}
	for (int i = 0;i < 26;++i)
	{
		std::cout << char(i + 'a')<<"="<<i<<std::endl;
	}
	for (int i = 0;i < 26;++i)
	{
		std::cout <<"|";
		for (int j = 0;j < arr[i];++j)
		{
			std::cout << "*";
		}
		std::cout << std::endl;
	}
}*/

/* Задание 5
Пусть есть двумерный массив объявленный следующим образом:
int data[3][2] = { {2, 4}, {8, 16}, {32, 64} };
Чему равно количество строк в данном массиве?
3
Чему равно количество элементов в каждой строке?
2
Какой размер имеет данный массив?
Данные какого типа он хранит?
integer
Как обратиться к элементу со значением 8?
data[1][0]
Как обратиться к элементу со значением 64?
data[2][1]
Присвойте первому элементу массива значение 1.
data[0][0]=1
Удвойте значение последнего элемента в массиве.
data[2][1]=data[2][1]*2
Объявите двумерный массив размером 4х2 любого типа и проинизиализируете его с помощью списка инициализации
int mass[4][2]={ {,},{,},{,},{,} }
Можно ли не указывать размер двумерного массива при его создании?
no
Если можно, то продемострируйте это.
Пусть массив объявили следующим образом:
int data[][4] = { {1, 2}, {3,4,5} }
Каков размер данного массива?
Чему равен элемент data[0][0]? 1  Чему равен элемент data[1][2]? 4
Проверьте ответы с помощью дебагера.
Увеличьте в два раза каждый элемент в данном массиве.

Выведите все элементы массива на экран.
for(inti=0;i<2;++i)
{
	for(int j=0;j<4;++j)
	{
	data[i][j]=data[i][j]*2;
	std::cout<<data[i][j]<<" ";
	}
	std::cout<<std::endl;
}
Использовать циклы for
*/

/* Задание 6
Сгенерируйте двумерный массив размером 10x10.
Заполните его случайными значениями от 0 до 100
Найдите и выведите на экран:
Сгенерированный массив
Сумму всех элементов массива
Количество всех четных элементов.
Максимальный и минимальный элементы массива вместе с их индексами
*/
int main()
{
	int mass[10][10];
	for (int i = 0;i < 10;++i)
	{
		for (int j = 0;j < 10;++j)
		{
			mass[i][j] = GetRandomValue(0, 100);
		}
	}

	for (int i = 0;i < 10;++i)
	{
		for (int j = 0;j < 10;++j)
		{
			std::cout << mass[i][j] << " " ;
		}
		std::cout << std::endl;
	}
	int summ, Inv, max, min;
	max = -1;
	min = 101;
	for (int i = 0;i < 10;++i)
	{
		for (int j = 0;j < 10;++j)
		{
			summ += mass[i][j];
		}
	}
	for (int i = 0;i < 10;++i)
	{
		for (int j = 0;j < 10;++j)
		{
			if (mass[i][j] % 2 == 0)
			{
				++Inv;
			}
		}
	}
	for (int i = 0;i < 10;++i)
	{
		for (int j = 0;j < 10;++j)
		{
			if (mass[i][j] > max)
			{
				max = mass[i][j];
			}
			if (mass[i][j] <min)
			{
				min = mass[i][j];
			}
		}
	}
}
/* Дополнительное задание
На вход подается строка, описывающая ситуацию на поле в игре "Крестики-нолики".
На ее основании необходимо заполнить двумерный массив char field[3][3],
и, проаназилировав его, вывести победителя или Draw,
если выигрышной последовательности нет ни у одного, либо есть у обоих.
Тестовые данные				Ожидаемый результат
XXX OO. ...					Winner is X
OXO XO. .XO					Draw
OXO XOX OX.					Draw
XOX OXO OXO					Draw
... ... ...					Draw
XXX OOO ...					Draw
XOO XOO XX.					Winner is X
.O. XO. XOX					Winner is O
*/